defaults:

  # Train Script
  logdir: /dev/null
  seed: 0
  wandb: {project: 'world-model',name: 'dreamerv2',mode: 'online'}
  device: cuda
  task: metaworld_drawer_open
  envs: 1
  envs_parallel: none
  render_size: [64, 64]
  dmc_camera: -1
  camera: none
  dmcr_vary: all
  atari_grayscale: True
  time_limit: 0
  action_repeat: 1
  steps: 1e8
  log_every: 1e4
  eval_every: 1e5
  eval_eps: 1
  prefill: 10000
  pretrain: 1
  train_every: 5
  train_steps: 1
  expl_until: 0
  replay: {capacity: 2e6, ongoing: False, minlen: 50, maxlen: 50, prioritize_ends: True}
  dataset: {batch: 16, length: 50}
  log_keys_video: ['image']
  log_keys_sum: '^$'
  log_keys_mean: '^$'
  log_keys_max: '^$'
  precision: 16
  jit: True
  stop_steps: -1

  # CARLA
  carla_port: 2000
  carla: {
    collision_coeff: 1e-3,
    num_other_vehicles: 20,
    centering_reward_type: div,
    centering_reward_weight: 1.0,
    clip_collision_reward: 10.0,
    steer_coeff: 1.0,
    centering_border: 1.75,
    use_branch_lane_cut: True,
    changing_weather_speed: 0.1,
  }

  # Agent
  clip_rewards: tanh
  expl_behavior: greedy
  expl_noise: 0.0
  eval_noise: 0.0
  eval_state_mean: False

  # Intrinsic bonus parameters
  k: 16
  beta: 0.0
  beta_type: abs
  intr_seq_length: 5
  intr_reward_norm: {momentum: 0.99, scale: 1.0, eps: 1e-8, init: 1.0}
  queue_size: 4096
  queue_dim: 128

  # World Model
  grad_heads: [decoder, reward, discount]
  pred_discount: True
  rssm: {ensemble: 1,embed_dim: 1536, hidden: 1024, deter: 1024, stoch: 32, discrete: 32, act: elu, norm: none, std_act: sigmoid2, min_std: 0.1}
  encoder_type: plaincnn # ['plaincnn', 'resnet']
  encoder: {
    mlp_keys: '.*', 
    cnn_keys: '.*', 
    act: elu, 
    norm: none, 
    cnn_depth: 48, 
    cnn_kernels: [4, 4, 4, 4], 
    mlp_layers: [400, 400, 400, 400], 
    res_norm: 'batch',
    res_depth: 3,
    res_layers: 2,
  }
  decoder_type: plaincnn # ['plaincnn', 'resnet']
  decoder: {
    mlp_keys: '.*', 
    cnn_keys: '.*', 
    act: elu, 
    norm: none, 
    cnn_input_dim: 2048,
    cnn_depth: 48, 
    cnn_kernels: [5, 5, 6, 6], 
    mlp_layers: [400, 400, 400, 400], 
    res_norm: 'batch', 
    res_depth: 3,
    res_layers: 2,
  }
  reward_head: {layers: 4, input_dim: 2048, units: 400, act: elu, norm: none, dist: mse}
  discount_head: {layers: 4, units: 400, act: elu, norm: none, dist: binary}
  loss_scales: {
    kl: 1.0, 
    reward: 1.0, 
    discount: 1.0, 
    proprio: 1.0,
    image: 1.0
  }
  kl: {free: 0.0, forward: False, balance: 0.8, free_avg: True}
  model_opt: {opt: adam, lr: 1e-4, eps: 1e-5, clip: 100, wd: 1e-6}

  # Actor Critic
  actor: {layers: 4, input_dim: 2048, units: 400, act: elu, norm: none, dist: auto, min_std: 0.1}
  critic: {layers: 4, input_dim: 2048, units: 400, act: elu, norm: none, dist: mse}
  actor_opt: {opt: adam, lr: 8e-5, eps: 1e-5, clip: 100, wd: 1e-6}
  critic_opt: {opt: adam, lr: 2e-4, eps: 1e-5, clip: 100, wd: 1e-6}
  discount: 0.99
  discount_lambda: 0.95
  imag_horizon: 15
  imag_batch: -1
  actor_grad: auto
  actor_grad_mix: 0.1
  actor_ent: 2e-3
  slow_target: True
  slow_target_update: 100
  slow_target_fraction: 1
  slow_baseline: True
  reward_norm: {momentum: 1.0, scale: 1.0, eps: 1e-8}

  # Exploration
  expl_intr_scale: 1.0
  expl_extr_scale: 0.0
  expl_opt: {opt: adam, lr: 3e-4, eps: 1e-5, clip: 100, wd: 1e-6}
  expl_head: {layers: 4, units: 400, act: elu, norm: none, dist: mse}
  expl_reward_norm: {momentum: 1.0, scale: 1.0, eps: 1e-8}
  disag_target: stoch
  disag_log: False
  disag_models: 10
  disag_offset: 1
  disag_action_cond: True
  expl_model_loss: kl


metaworld:

  task: metaworld_door_open
  encoder: {mlp_keys: '$^', cnn_keys: 'image'}
  decoder: {mlp_keys: '$^', cnn_keys: 'image'}
  dataset: {batch: 50, length: 50}
  time_limit: 500
  action_repeat: 1
  eval_eps: 10
  prefill: 5000
  camera: corner
  steps: 256000
  stop_steps: 255000

  replay.capacity: 1e6
  eval_every: 1e4
  pretrain: 100
  clip_rewards: identity
  grad_heads: [decoder, reward]
  pred_discount: False
  actor_ent: 1e-4
  critic_opt.lr: 8e-5
  model_opt.lr: 3e-4

robodesk:

  task: robodesk_open_slide
  encoder: {mlp_keys: '$^', cnn_keys: 'image'}
  decoder: {mlp_keys: '$^', cnn_keys: 'image'}
  dataset: {batch: 50, length: 50}
  time_limit: 500
  action_repeat: 1
  eval_eps: 10
  prefill: 5000
  camera: corner
  steps: 256000
  stop_steps: 255000

  replay.capacity: 1e6
  eval_every: 1e4
  pretrain: 100
  clip_rewards: identity
  grad_heads: [decoder, reward]
  pred_discount: False
  actor_ent: 1e-4
  critic_opt.lr: 8e-5
  model_opt.lr: 3e-4

atari:

  task: atari_pong
  encoder: {mlp_keys: '$^', cnn_keys: 'image'}
  decoder: {mlp_keys: '$^', cnn_keys: 'image'}
  time_limit: 27000
  action_repeat: 4
  steps: 5e7
  eval_every: 2.5e5
  log_every: 1e4
  prefill: 50000
  train_every: 16
  clip_rewards: tanh
  rssm: {hidden: 600, deter: 600}
  model_opt.lr: 2e-4
  actor_opt.lr: 4e-5
  critic_opt.lr: 1e-4
  actor_ent: 1e-3
  discount: 0.999
  loss_scales.kl: 0.1
  loss_scales.discount: 5.0

crafter:

  task: crafter_reward
  encoder: {mlp_keys: '$^', cnn_keys: 'image'}
  decoder: {mlp_keys: '$^', cnn_keys: 'image'}
  log_keys_max: '^log_achievement_.*'
  log_keys_sum: '^log_reward$'
  rssm: {hidden: 1024, deter: 1024}
  discount: 0.999
  model_opt.lr: 1e-4
  actor_opt.lr: 1e-4
  critic_opt.lr: 1e-4
  actor_ent: 3e-3
  .*\.norm: layer

dmc_vision:

  task: dmc_walker_walk
  encoder: {mlp_keys: '$^', cnn_keys: 'image'}
  decoder: {mlp_keys: '$^', cnn_keys: 'image'} #, cnn_input_dim: 1224}
  action_repeat: 2
  eval_every: 1e4
  prefill: 1000
  pretrain: 100
  clip_rewards: identity
  pred_discount: False
  replay.prioritize_ends: False
  grad_heads: [decoder, reward]
  # rssm: {hidden: 200, deter: 200}
  model_opt.lr: 3e-4
  actor_opt.lr: 8e-5
  critic_opt.lr: 8e-5
  actor_ent: 1e-4
  kl.free: 1.0

dmc_proprio:

  task: dmc_walker_walk
  encoder: {mlp_keys: '.*', cnn_keys: '$^'}
  decoder: {mlp_keys: '.*', cnn_keys: '$^'}
  action_repeat: 2
  eval_every: 1e4
  prefill: 1000
  pretrain: 100
  clip_rewards: identity
  pred_discount: False
  replay.prioritize_ends: False
  grad_heads: [decoder, reward]
  rssm: {hidden: 200, deter: 200}
  model_opt.lr: 3e-4
  actor_opt.lr: 8e-5
  critic_opt.lr: 8e-5
  actor_ent: 1e-4
  kl.free: 1.0

dmc_remastered:

  task: dmcr_walker_walk
  encoder: {mlp_keys: '$^', cnn_keys: 'image'}
  decoder: {mlp_keys: '$^', cnn_keys: 'image'}
  action_repeat: 2
  eval_every: 1e4
  prefill: 1000
  pretrain: 100
  clip_rewards: identity
  pred_discount: False
  replay.prioritize_ends: False
  grad_heads: [decoder, reward]
  model_opt.lr: 3e-4
  actor_opt.lr: 8e-5
  critic_opt.lr: 8e-5
  actor_ent: 1e-4
  kl.free: 1.0
  dmcr_vary: all
  eval_eps: 10

debug:

  jit: False
  time_limit: 100
  eval_every: 300
  log_every: 300
  prefill: 100
  pretrain: 1
  train_steps: 1
  replay: {minlen: 10, maxlen: 30}
  dataset: {batch: 10, length: 10}


dmcr_hopper:
  dmcr_vary: [bg, floor, body, target, reflectance, light]


carla:

  task: carla_Changing
  encoder: { mlp_keys: '$^', cnn_keys: 'image' }
  decoder: { mlp_keys: '$^', cnn_keys: 'image' }
  action_repeat: 1
  steps: 152002
  eval_every: 5e3
  prefill: 1000
  pretrain: 100
  clip_rewards: identity
  pred_discount: False
  replay.prioritize_ends: False
  grad_heads: [ decoder, reward ]
  model_opt.lr: 3e-4
  actor_opt.lr: 8e-5
  critic_opt.lr: 8e-5
  actor_ent: 1e-4
  kl.free: 1.0
  eval_eps: 5


plaincnn:
  encoder_type: plaincnn
  decoder_type: plaincnn


plainresnet:
  encoder_type: resnet
  decoder_type: resnet